# This is a config file for Fraunhofer parallel file system management nodes.
# http://www.fhgfs.com


# --- [Table of Contents] ---
#
# 1) Settings
# 2) Command Line Arguments
# 3) Settings Documentation


#
# --- Section 1.1: [Basic Settings] ---
#

<%
configs             = scope.lookupvar('fhgfs::mgmtd_configs')
config_keys         = scope.lookupvar('fhgfs::mgmtd_config_keys')
longest_key         = configs.keys.group_by(&:size).max.last.first
setting_str_length  = longest_key.size + 1
-%>
<% config_keys['basic'].each do |key| -%>
<%= key.ljust(setting_str_length) %>= <%= configs[key] %>
<% end -%>


#
# --- Section 1.2: [Advanced Settings] ---
#

<% config_keys['advanced'].each do |key| -%>
<%= key.ljust(setting_str_length) %>= <%= configs[key] %>
<% end -%>


#
# --- Section 2: [Command Line Arguments] ---
#

# Use the command line argument "cfgFile=/etc/anotherconfig.conf" to
# specify a different config file for fhgfs-mgmtd.
#
# All other options in this file can also be used as command line
# arguments, overriding the corresponding config file values.


#
# --- Section 3.1: [Logging] ---
#

# [logLevel]
# Defines the amount of output messages. The higher this level, the more
# detailed the log messages will be.
# Note: Levels above 2 might decrease performance.
# Default: 2 (Max: 5)

# [logNoDate]
# Defines whether "date & time" (=false) or the current "time only" (=true)
# should be logged.
# Default: false 

# [logStdFile]
# The path and filename of the log file for standard log messages. If no name
# is specified, the messages will be written to the console.
# Default: /var/log/fhgfs-mgmtd.log

# [logNumLines]
# The maximum number of lines per log file.
# Default: 50000

# [logNumRotatedFiles]
# The number of old files to keep when "logNumLines" is reached and the log file
# is rewritten (log rotation).
# Default: 5


#
# --- Section 3.2: [Connections & Communication] ---
#

# [connPortShift]
# Shifts all following UDP and TCP ports according to the specified value.
# Intended to make port configuration easier in case you do not want to
# configure each port individually.  
# Default: 0

# [connMgmtdPortUDP], [connMgmtdPortTCP]
# The UDP and TCP ports of the management node.
# Default: 8008

# [connBacklogTCP]
# The TCP listen backlog.
# Default: 64

# [connInterfacesFile]
# The path to a text file that specifies the names of the interfaces, which
# may be used for communication. One interface per line. The line number also
# defines the priority of the interface.
# Example: "ib0" in the first line, "eth0" in the second line.
# Values: This setting is optional. If unspecified, all available interfaces 
#    will be used and priorities will be assigned automatically.
# Note: This has no influence on outgoing connections. The information is sent
#    to other hosts to inform them about possible communication paths.
# Default: <none>

# [connNetFilterFile]
# The path to a text file that specifies allowed IP subnets, which may be used
# for outgoing communication. One subnet per line in classless notation (IP
# address and number of significant bits).
# Example: "192.168.10.0/24" in the first line, "192.168.20.0/24" in the second
#    line.
# Values: This setting is optional. If unspecified, all addresses are allowed 
#    for outgoing communication.
# Default: <none>

# [connAuthFile]
# The path to a file that contains a shared secret for connection based
# authentication. Only peers that use the same shared secret will be able to
# connect.
# Default: <none>


#
# --- Section 3.3: [Storage] ---
#

# [storeMgmtdDirectory]
# The absolute path and name of a directory where the file system can store its
# management data.
# Default: <none>

# [storeAllowFirstRunInit]
# Enables or disables daemon startup with an uninitialized storage directory.
# This can be used to make sure that the daemon does not run when the storage
# partition is not mounted (e.g. because it needs repair after a power outage).
# Note: This setting must be enabled during first startup of the daemon, but
#    may be disabled afterwards.
# Default: true


#
# --- Section 3.4: [Tuning] ---
#

# [tuneNumWorkers]
# The number of worker threads. Should be at least 3. A value of up to twice
# the number of CPU cores of your machine is the recommended choice.
# Note: The management daemon does not use a lot of CPU cyles and is not
#    critical for file system performance.
# Default: 4

# [tuneClientAutoRemoveMins]
# The time (in minutes) after which an unreachable node is assumed to be dead
# and thus will be removed from the file system, which will release all
# associated resources, such as open file handles.
# Note: 0 disables automatic removal.
# Note: A value greater than 0 is highly recommended for clients to allow the
#    automatic release of old file handles.
# Default: Client: 30

# [tuneMetaSpaceLowLimit], [tuneMetaSpaceEmergencyLimit],
# [tuneStorageSpaceLowLimit], [tuneStorageSpaceEmergencyLimit]
# The free space class thresholds. If a server (or storage target) is below a
# threshold, it will only be used to store new files and directories when no
# higher class servers are available.
# Note: Node preference settings of a client will be ignored if it helps to
#    avoid using servers from the emergency class.
# Default: Meta: 10G/3G; Storage: 512G/10G


#
# --- Section 3.5: [System Settings] ---
#

# [sysAllowNewServers]
# Specifies whether new servers can be added to the system. If set to false,
# registration requests of new servers will be rejected.
# Default: true

# [sysForcedRoot]
# Enforces a certain numeric root node ID. If set to 0, the root node will be
# chosen automatically.
# Default: 0

# [sysOverrideStoredRoot]
# Specifies whether the value of "sysForcedRoot" should override the value
# of a previously stored root node ID. 
# Default: false


#
# --- Section 3.6: [Startup] ---
#

# [runDaemonized]
# Detach the process from its parent (and from stdin/-out/-err).
# Default: true


#
# --- Section 3.7: [Quota Settings] ---
#

# [quotaEnableEnforcement]
# Enables enforcement of user and group quota limits by periodically checking
# if the limits are exceeded.
# Note: This uses quota information provided by the underlying local file
#    systems of the storage targets.
# Note: Set quota limits with "fhgfs-ctl --setquota".
# Note: If this option is true, performance might be slightly decreased due to
#    extra information tracking.
# Default: false

# [quotaUpdateIntervalMin]
# The interval in minutes to query the storage servers for the used quota.
# Note: A smaller interval will reduce the time until an exceeded quota limit
#    is noticed, but will also put more load on the system and thus might
#    reduce performance.
# Default: 10

# [quotaQueryType]
# Defines the type to get the user and group IDs. This can be "system" to get the
# user and group IDs from the local system which is maybe connected to a LDAP or a
# other user management system. The second valid value is "range" which must be
# specified in quotaQueryUIDRange and quotaQueryGIDRange. In this case all IDs of
# user ID range and the group ID range will be queried.
# Note: When the user management system is slow it can decrease the performance.
# Note: Do not define to big ranges because this will decrease the performance.
# Default: system

# [quotaQueryUIDRange]
# The range of user IDs which should be checked for quota enforcement. The range 
# must be specified with two numeric values which is separated by a comma. If
# quotaQueryType is set to "range" this configuration option is required.
# Note: Do not define a to big range because this will decrease the performance.
# Default: <none>

# [quotaQueryGIDRange]
# The range of group IDs which should be checked for quota enforcement. The range 
# must be specified with two numeric values which is separated by a comma. If
# quotaQueryType is set to "range" this configuration option is required.
# Note: Do not define a to big range because this will decrease the performance.
# Default: <none>
